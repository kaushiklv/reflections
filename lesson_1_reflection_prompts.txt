How did viewing a diff between two versions of a file help you see the bug that
was introduced?

I could easily identify the lines removed and added from the previous and the new versions.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

I can reflect back to intermediate versions and see where exactly I have been going wrong so that I don't repeat the same mistakes again.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pro: For every logical change we can commit which Google Doc cannot do.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

So that after a particular commit we can keep track of the entire repository and we don't need to check older versions of some unchanged file. We can be sure to have the latest version of the files after the commit.
This is good for projects in which one file will depend on the other whereas in Google Docs they are not so inter-related and hence they treat each file separately

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

The confidence that the previous version is safe no matter what gives the freedom to explore more.

Now that you have your workspace set up, what do you want to try using Git for?

For my projects now and in the future.
